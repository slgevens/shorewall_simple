---
# Loading vars
- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

# Install Shorewall server
- name: Install the required  packages in Redhat derivatives
  yum: name={{ shorewall_package }} state=present
  when: ansible_os_family == 'RedHat'

- name: Install the required packages in Debian derivatives
  apt: name={{ shorewall_package }} state=present update_cache=yes
  when: ansible_os_family == 'Debian'

# Generate configuration
- name: Generate zones
  template: src=zones.j2 dest={{ shorewall_zones_file }}
  register: shorewall_zone_tmp

- name: Generate interfaces
  template: src=interfaces.j2 dest={{ shorewall_interfaces_file }}
  register: shorewall_interface_tmp

- name: Generate policy
  template: src=policy.j2 dest={{ shorewall_policy_file }}
  register: shorewall_policy_tmp

- name: Generate rules
  template: src=rules.j2 dest={{ shorewall_rules_file }}
  register: shorewall_rules_conf_tmp

- name: Generate masq
  template: src=masq.j2 dest={{ shorewall_masq_file }}
  register: shorewall_masq_tmp
  when: shorewall_masq is defined

- name: Generate shorewall.conf 
  template: src=shorewall.conf.j2 dest={{ shorewall_config_file }}
  register: shorewall_conf_tmp

# Generate service configuration
- name: Generate Shorewall service conf
  template: src=shorewall.j2 dest={{ shorewall_service_config }} owner=root group=root
  register: shorewall_service_conf_tmp

# Reload service
- name: Restart Shorewall service
  service: name={{ shorewall_service }} state=restarted
  when: shorewall_zone_tmp.changed or shorewall_interface_tmp.changed or shorewall_policy_tmp.changed or shorewall_rules_conf_tmp.changed or shorewall_masq_tmp.changed or shorewall_conf_tmp.changed or shorewall_service_conf_tmp.changed

# Enable Shorewall server
- name: Start the  Shorewall service
  service: name={{ shorewall_service }} state=started enabled=yes
